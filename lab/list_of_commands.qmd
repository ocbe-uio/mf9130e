---
title: "List of commands"
description: "To help you navigate the course material"
format: 
  html:
    code-fold: false
    code-tools: false
editor: source
---

# Data 

### Data import

```{r}
#| label: load-data-penguins-mini
#| echo: true
#| eval: false

read.csv('data/your_data.csv', sep = ',')
```

### Create variables

Create a numeric variable


```{r}
#| label: create numeric var
#| echo: true
#| eval: false

a <- 3
a  # return the value in console
return(a)
```

Numeric, character, logical variables

```{r}
#| label: create other variables
#| echo: true
#| eval: false

class(a)

b <- 'hadley'
class(b)

c <- TRUE
class(c)
```


### Data structure (vector, matrix)

Create vectors and matrices

```{r}
#| label: create vector and matrix
#| echo: true
#| eval: false

num_vector <- c(1, 2, 3, 4, 5)
char_vector <- c('student_a', 'student_b', 'student_c')
logical_vector <- c(T, F, T, F)

# matrix
matrix_1 <- matrix(data = c(1, 2, 3, 4), nrow = 2, ncol = 2, byrow = T)

# matrix by combining vectors
vec1 <- c(1, 2)
vec2 <- c(3, 4)

matrix_c <- cbind(vec1, vec2) # bind by columnn
matrix_r <- rbind(vec2, vec2) # bind by row
```


# Data exploration of a `data.frame` 

Create a `data.frame`

```{r}
#| label: create dataframe
#| echo: true
#| eval: false

mini_data <- data.frame(
  age = c(20, 50, 32), 
  sex = c('male', 'female', 'male'), 
  has_covid = c(T, T, F)
)
```

Get the column (feature) names, dimension, number of rows (observation) and columns

```{r}
#| label: basic information
#| echo: true
#| eval: false

colnames(mini_data)
dim(mini_data)
nrow(mini_data)
ncol(mini_data)
```

Select a variable (`age`) from the data

```{r}
#| label: select variable
#| echo: true
#| eval: false

mini_data$age
mini_data['age']
mini_data[, 1] # first column, which is 'age'
```

Filter a variable based on another (for example, `age` for females (`sex == 'female'`))

```{r}
#| label: filter variable
#| echo: true
#| eval: false

mini_data$age[mini_data$sex == 'female']

# you can also break down the process:
age <- mini_data$age
sex <- mini_data$sex
age[sex == 'female']
```


# Descriptive statistics

Continuous variables

```{r}
#| label: summary stat 1
#| echo: true
#| eval: false

# continuous variable x
summary(x)
min(x)
max(x)
mean(x)
median(x)
quantile(x, 0.95)
IQR(x) # interquartile range
```

Categorical variables: count and percentage

```{r}
#| label: summary stat 2
#| echo: true
#| eval: false

# continuous variable z
# subjects per category in x
table(x)
# percentage
table(x)/length(x) 
```




# Visualisation

We let `x, y` be two continuous variables, and `z` be categorical. To create **histogram, boxplot, scatterplot**, you can use the following commands,

```{r}
#| label: visualisation
#| echo: true
#| eval: false

hist(x) # histogram
boxplot(x) # boxplot 
boxplot(x ~ z, data = data) # boxplot for two variables, where z is categorical
plot(x,y)  # scatter plot of x, y
```



# Hypothesis tests

#### t-test

```{r}
#| label: t-test
#| echo: true
#| eval: false

# one sample (default tests against 0, conf.level 0.95)
t.test(x)

# one sample
t.test(x, mu = your_value, conf.level = 0.95)

# paired samples
t.test(x1, x2, paired = T, conf.level = 0.95)
t.test(x1-x2, conf.level = 0.95) # equivalent to one sample

# two independent samples
t.test(x, y, conf.level = 0.95)

# check normal assumption
qqnorm(x)
qqline(x)
```





#### chi-square tests



--------------

(Content for *Week 2* will come soon!)

#### non-parametric tests


# Regression


#### Linear regression


#### Logistic regression

#### Survival analysis





